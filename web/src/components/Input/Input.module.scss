$padding: 0.5rem;
$transitionDuration: 0.1s;

.inputWrapper {
  position: relative;
  overflow: hidden;
  border-radius: 3px;
  background-color: var(--colorInteractionBackground);

  // focus overlay
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    background: var(--overlay);
    transition: opacity 0.1s;
    pointer-events: none;
    border-radius: inherit;
  }

  &.isFocused::after {
    opacity: 1;
  }

  .input {
    border: 0;
    outline: 0;
    font-size: 1rem;
    padding: 2 * $padding $padding;
    transition: transform $transitionDuration;
    background: transparent;
    color: var(--colorEmphasisHigh);
  }

  .label,
  .error {
    position: absolute;
    right: $padding;
    font-size: 0.75rem;
  }

  .label {
    top: -0.2rem;
    left: $padding;
    color: var(--colorEmphasisMedium);
    opacity: 0;
    transition: opacity $transitionDuration, transform $transitionDuration;
  }

  .error {
    color: var(--colorDanger);
    top: 0.3rem;
  }

  &.hasError,
  &.hasError.isFocused {
    border-color: var(--colorDanger);
  }

  &.hasContent {
    .input,
    .label {
      transform: translateY($padding);
    }

    .label {
      opacity: 1;
    }
  }
}
